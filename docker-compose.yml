version: "3.8"

services:
  django_auth:
    build: ./backend/django_auth
    container_name: django_auth
    restart: always
    ports:
      - "8000:8000"
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy  # Ensures DB is ready before Django starts
    networks:
      - backend_network
    volumes:
      - ./backend/django_auth:/app  # Mount source code for live development

  fastapi_api:
    build: ./backend/fastapi_api
    container_name: fastapi_api
    restart: always
    ports:
      - "8001:8001"
    env_file:
      - .env
    depends_on:
      database:
        condition: service_healthy  # Ensures DB is ready before FastAPI starts
    networks:
      - backend_network
    volumes:
      - ./backend/fastapi_api:/app  # Mount source code for live development

  database:
    image: postgres:15
    container_name: postgres_db
    restart: always
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - backend_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $POSTGRES_USER -d $POSTGRES_DB"]
      interval: 5s
      retries: 5
      start_period: 10s

volumes:
  postgres_data:

networks:
  backend_network:
    driver: bridge
